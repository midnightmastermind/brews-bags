{"ast":null,"code":"import { RECEIVE_USERS, REQUEST_USERS } from \"../actions/types\";\nimport _ from \"lodash\";\nimport { format } from \"date-fns\";\nconst initialState = {\n  users: [],\n  retrievingUsers: false\n};\nconst map = {\n  date: \"title\",\n  name: \"cardTitle\",\n  org: \"cardSubtitle\",\n  description: \"description\",\n  reference: \"reference\",\n  type: \"type\",\n  _id: \"id\",\n  files: \"files\",\n  tags: \"tags\"\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_USERS:\n      return { ...state,\n        retrievingUsers: true\n      };\n\n    case REQUEST_USERS:\n      let users = action.users;\n      let new_users = users.map(user => {\n        let date = new Date(user.date);\n        user.date = format(date, \"MMM yyyy\");\n        return _.mapKeys(user, (value, key) => {\n          return map[key];\n        });\n      });\n      return { ...state,\n        users: new_users,\n        retrievingUsers: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["RECEIVE_USERS","REQUEST_USERS","_","format","initialState","users","retrievingUsers","map","date","name","org","description","reference","type","_id","files","tags","state","action","new_users","user","Date","mapKeys","value","key"],"sources":["/home/joshpoms/projects/websites/brews-bags/client/src/reducers/userReducer.js"],"sourcesContent":["import {\r\n  RECEIVE_USERS, REQUEST_USERS\r\n} from \"../actions/types\";\r\nimport _ from \"lodash\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  retrievingUsers: false\r\n};\r\nconst map = {\r\n  date: \"title\",\r\n  name: \"cardTitle\",\r\n  org: \"cardSubtitle\",\r\n  description: \"description\",\r\n  reference: \"reference\",\r\n  type: \"type\",\r\n  _id: \"id\",\r\n  files: \"files\",\r\n  tags: \"tags\"\r\n}\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case REQUEST_USERS:\r\n      return {\r\n          ...state,\r\n          retrievingUsers: true\r\n      }\r\n    case REQUEST_USERS:\r\n      let users = action.users;\r\n      let new_users = users.map(user => {\r\n        let date = new Date(user.date);\r\n        user.date = format(date, \"MMM yyyy\")\r\n        return _.mapKeys(user, (value, key) => {\r\n          return map[key];\r\n        });\r\n      })\r\n\r\n      return {\r\n        ...state,\r\n        users: new_users,\r\n        retrievingUsers: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,aADF,EACiBC,aADjB,QAEO,kBAFP;AAGA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,eAAe,EAAE;AAFE,CAArB;AAIA,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,OADI;EAEVC,IAAI,EAAE,WAFI;EAGVC,GAAG,EAAE,cAHK;EAIVC,WAAW,EAAE,aAJH;EAKVC,SAAS,EAAE,WALD;EAMVC,IAAI,EAAE,MANI;EAOVC,GAAG,EAAE,IAPK;EAQVC,KAAK,EAAE,OARG;EASVC,IAAI,EAAE;AATI,CAAZ;AAWA,eAAe,YAAuC;EAAA,IAA9BC,KAA8B,uEAAtBb,YAAsB;EAAA,IAARc,MAAQ;;EACpD,QAAQA,MAAM,CAACL,IAAf;IACE,KAAKZ,aAAL;MACE,OAAO,EACH,GAAGgB,KADA;QAEHX,eAAe,EAAE;MAFd,CAAP;;IAIF,KAAKL,aAAL;MACE,IAAII,KAAK,GAAGa,MAAM,CAACb,KAAnB;MACA,IAAIc,SAAS,GAAGd,KAAK,CAACE,GAAN,CAAUa,IAAI,IAAI;QAChC,IAAIZ,IAAI,GAAG,IAAIa,IAAJ,CAASD,IAAI,CAACZ,IAAd,CAAX;QACAY,IAAI,CAACZ,IAAL,GAAYL,MAAM,CAACK,IAAD,EAAO,UAAP,CAAlB;QACA,OAAON,CAAC,CAACoB,OAAF,CAAUF,IAAV,EAAgB,CAACG,KAAD,EAAQC,GAAR,KAAgB;UACrC,OAAOjB,GAAG,CAACiB,GAAD,CAAV;QACD,CAFM,CAAP;MAGD,CANe,CAAhB;MAQA,OAAO,EACL,GAAGP,KADE;QAELZ,KAAK,EAAEc,SAFF;QAGLb,eAAe,EAAE;MAHZ,CAAP;;IAMF;MACE,OAAOW,KAAP;EAvBJ;AAyBD"},"metadata":{},"sourceType":"module"}