{"ast":null,"code":"import { RECEIVE_SERVICES, REQUEST_SERVICES } from \"../actions/types\";\nimport _ from \"lodash\";\nimport { format } from \"date-fns\";\nconst initialState = {\n  services: [],\n  retrievingServices: false\n};\nconst map = {\n  date: \"title\",\n  name: \"cardTitle\",\n  org: \"cardSubtitle\",\n  description: \"description\",\n  reference: \"reference\",\n  type: \"type\",\n  _id: \"id\",\n  files: \"files\",\n  tags: \"tags\"\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_SERVICES:\n      return { ...state,\n        retrievingServices: true\n      };\n\n    case REQUEST_SERVICES:\n      let services = action.services;\n      let new_services = services.map(service => {\n        let date = new Date(service.date);\n        service.date = format(date, \"MMM yyyy\");\n        return _.mapKeys(service, (value, key) => {\n          return map[key];\n        });\n      });\n      return { ...state,\n        services: new_services,\n        retrievingServices: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["RECEIVE_SERVICES","REQUEST_SERVICES","_","format","initialState","services","retrievingServices","map","date","name","org","description","reference","type","_id","files","tags","state","action","new_services","service","Date","mapKeys","value","key"],"sources":["/data/data/com.termux/files/home/poms_projects/salty-temple-49118/client/src/reducers/serviceReducer.js"],"sourcesContent":["import {\r\n  RECEIVE_SERVICES, REQUEST_SERVICES\r\n} from \"../actions/types\";\r\nimport _ from \"lodash\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst initialState = {\r\n  services: [],\r\n  retrievingServices: false\r\n};\r\nconst map = {\r\n  date: \"title\",\r\n  name: \"cardTitle\",\r\n  org: \"cardSubtitle\",\r\n  description: \"description\",\r\n  reference: \"reference\",\r\n  type: \"type\",\r\n  _id: \"id\",\r\n  files: \"files\",\r\n  tags: \"tags\"\r\n}\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case REQUEST_SERVICES:\r\n      return {\r\n          ...state,\r\n          retrievingServices: true\r\n      }\r\n    case REQUEST_SERVICES:\r\n      let services = action.services;\r\n      let new_services = services.map(service => {\r\n        let date = new Date(service.date);\r\n        service.date = format(date, \"MMM yyyy\")\r\n        return _.mapKeys(service, (value, key) => {\r\n          return map[key];\r\n        });\r\n      })\r\n\r\n      return {\r\n        ...state,\r\n        services: new_services,\r\n        retrievingServices: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,gBADF,EACoBC,gBADpB,QAEO,kBAFP;AAGA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EADS;EAEnBC,kBAAkB,EAAE;AAFD,CAArB;AAIA,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,OADI;EAEVC,IAAI,EAAE,WAFI;EAGVC,GAAG,EAAE,cAHK;EAIVC,WAAW,EAAE,aAJH;EAKVC,SAAS,EAAE,WALD;EAMVC,IAAI,EAAE,MANI;EAOVC,GAAG,EAAE,IAPK;EAQVC,KAAK,EAAE,OARG;EASVC,IAAI,EAAE;AATI,CAAZ;AAWA,eAAe,YAAuC;EAAA,IAA9BC,KAA8B,uEAAtBb,YAAsB;EAAA,IAARc,MAAQ;;EACpD,QAAQA,MAAM,CAACL,IAAf;IACE,KAAKZ,gBAAL;MACE,OAAO,EACH,GAAGgB,KADA;QAEHX,kBAAkB,EAAE;MAFjB,CAAP;;IAIF,KAAKL,gBAAL;MACE,IAAII,QAAQ,GAAGa,MAAM,CAACb,QAAtB;MACA,IAAIc,YAAY,GAAGd,QAAQ,CAACE,GAAT,CAAaa,OAAO,IAAI;QACzC,IAAIZ,IAAI,GAAG,IAAIa,IAAJ,CAASD,OAAO,CAACZ,IAAjB,CAAX;QACAY,OAAO,CAACZ,IAAR,GAAeL,MAAM,CAACK,IAAD,EAAO,UAAP,CAArB;QACA,OAAON,CAAC,CAACoB,OAAF,CAAUF,OAAV,EAAmB,CAACG,KAAD,EAAQC,GAAR,KAAgB;UACxC,OAAOjB,GAAG,CAACiB,GAAD,CAAV;QACD,CAFM,CAAP;MAGD,CANkB,CAAnB;MAQA,OAAO,EACL,GAAGP,KADE;QAELZ,QAAQ,EAAEc,YAFL;QAGLb,kBAAkB,EAAE;MAHf,CAAP;;IAMF;MACE,OAAOW,KAAP;EAvBJ;AAyBD"},"metadata":{},"sourceType":"module"}